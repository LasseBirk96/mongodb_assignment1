version: '3.8'
services:
  app:
    build:
      context: tweettweetstation
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - router
    environment:
      - MONGO_CONNECTION_STRING=mongodb://router:27017/?directConnection=true
    networks:
      - internalnetwork

  # shard 0
  shard0-replica0:
    build:
      context: mongod
    command: mongod -f /etc/mongod.conf --shardsvr --replSet shard0
    volumes:
      - ./mongod/mongod.conf:/etc/mongod.conf
    networks:
      internalnetwork:
        aliases:
          - shard0-replica0
    environment:
      - REPSET_NAME=shard0
    expose:
      - "27017"

  # shard 1
  shard1-replica0:
    build:
      context: mongod
    command: mongod -f /etc/mongod.conf --shardsvr --replSet shard1
    volumes:
      - ./mongod/mongod.conf:/etc/mongod.conf
    networks:
      internalnetwork:
        aliases:
          - shard1-replica0
    environment:
      - REPSET_NAME=shard1
    expose:
      - "27017"

  # config db
  configdb-replica0:
    build:
      context: mongod
    command: mongod -f /etc/mongod.conf --configsvr --replSet configdb
    volumes:
      - ./mongod/mongod.conf:/etc/mongod.conf
    networks:
      internalnetwork:
        aliases:
          - configdb-replica0
    environment:
      - REPSET_NAME=configdb
    expose:
      - "27017"

  # router
  router:
    build:
      context: mongos
    command: mongos --port 27017 --bind_ip 0.0.0.0 --configdb "configdb/configdb-replica0:27017"
    depends_on:
      - shard0-replica0
      - shard1-replica0
      - configdb-replica0
    volumes:
      - ./dump:/dump
    networks:
      internalnetwork:
        aliases:
          - router
    environment:
      - SHARD_LIST=shard0/shard0-replica0:27017;shard1/shard1-replica0:27017
    expose:
      - "27017"
    ports:
      - "27017:27017"

networks:
  internalnetwork: {}
